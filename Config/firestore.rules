rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if accessing own data
    function isOwnData() {
      return isAuthenticated() && 
        request.auth.uid == resource.data.authUserId;
    }
    
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Chat sessions - users can only access their own sessions
    match /chat_sessions/{sessionId} {
      allow read: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.authUserId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      
      // Messages within sessions - inherit session permissions
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && 
          get(/databases/$(database)/documents/chat_sessions/$(sessionId)).data.authUserId == request.auth.uid;
      }
    }
    
    // Mood entries - users can only access their own
    match /mood_entries/{entryId} {
      allow read: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.authUserId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
    }
    
    // Journal entries - users can only access their own
    match /journal_entries/{entryId} {
      allow read: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.authUserId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.authUserId == request.auth.uid;
    }
    
    // Audit logs - write only, no read access
    match /audit_logs/{logId} {
      allow read: if false; // No one can read audit logs through client
      allow write: if isAuthenticated();
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}